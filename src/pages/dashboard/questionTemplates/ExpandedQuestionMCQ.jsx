import React from "react";
import TiptapEditor from "../../../components/TipTapEditor";
import Dropdown from "../../../components/Dropdown";
import Input from "../../../components/Input";

const ChildListItem = ({ text, id, isSelected, listType, selectHandler }) => {
  return (
    <div className={`form-check child-list-item ${isSelected ? "active" : ""}`}>
      <input
        className={`form-check-input`}
        type={listType ? listType : "checkbox"}
        checked={isSelected}
        id={`flexCheckDefault-${id}`}
        onChange={() => {
          selectHandler(text);
        }}
      />
      <label className="form-check-label" for={`flexCheckDefault-${id}`}>
        {text}
      </label>
    </div>
  );
};
const ExpandedQuestionMCQ = ({
  index,
  questionItem,
  updateHandler,
  questionsBtnClickHandler,
}) => {
  return (
    <>
      <div className="list-wrapper">
        {questionItem.questions
          .filter((item) => item.id == "1")
          .map((item) => (
            <div className="entered-question" key={item.id}>
              <TiptapEditor
                text={item.text}
                updateText={(html) => {
                  updateHandler(
                    index,
                    "enteredQuestion",
                    html,
                    questionItem.id
                  );
                }}
                placeholder="Enter the paragraph here from which you want to generate MCQs. By default only 1 question with 1 correct and 3 incorrect answers will be generated by our AI unless mentioned otherwise"
              />
            </div>
          ))}
        {questionItem.questions.length > 1 && (
          <div className="similar-questions-wrapper">
            {questionItem.questions.map(
              (item) =>
                item.id != "1" && (
                  <div key={`item-${item.id}`}>
                    <ChildListItem
                      text={item.text}
                      id={`${index}-${questionItem.id}-${item.id}`}
                      isSelected={item.isChosen}
                      selectHandler={(answerText) => {
                        updateHandler(
                          index,
                          "selected_similar_question",
                          answerText,
                          questionItem.id
                        );
                      }}
                    />
                  </div>
                )
            )}
          </div>
        )}
      </div>
      {questionItem.questions[0].text != "" && (
        <div style={{ display: "flex", justifyContent: "space-between" }}>
          <div className="settings-wrapper">
            <div className="section">
              <p className="info">Correct Options</p>
              <Input placeHolder="1" value="" />
            </div>
            <div className="section">
              <p className="info">Incorrect Options</p>
              <Input placeHolder="3" value="" />
            </div>
          </div>
          <div className="controls-wrapper">
            <p className="info">Next steps:&nbsp;&nbsp;</p>
            <button
              className="btn  questionnaire-btn"
              onClick={() => {
                questionsBtnClickHandler(
                  questionItem.questions.filter((item) => item.id === "1")[0]
                    .text,
                  index,
                  questionItem.id
                );
              }}
            >
              Form Questions
            </button>
          </div>
        </div>
      )}
    </>
  );
};

export default ExpandedQuestionMCQ;
